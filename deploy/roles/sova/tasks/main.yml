---
- name: Install packages
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - docker
    - git
    - curl
  become: yes

- name: Download pip
  get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /tmp/get-pip.py

- name: Install pip
  shell: command -v pip || /usr/bin/python /tmp/get-pip.py
  become: yes

- name: Install python packages
  pip:
    name:
      - docker-compose
      - docker
      - requests
  become: yes

- name: Find out docker group name
  shell: grep docker /etc/group | cut -d":" -f1
  register: docker_group

- name: Add user to docker group
  user:
    name: '{{ ansible_user }}'
    groups: '{{ docker_group.stdout }}'
    append: yes
  become: yes

# Use this dirty hack to relogin the user
# https://github.com/ansible/ansible-modules-core/issues/921
- name: Kill SSH
  shell: sleep 1; pkill -u {{ ansible_user }} sshd
  async: 3
  poll: 2

- name: Create docker settings file
  copy:
    content: |
      {
      "live-restore": true,
      "group": "{{ docker_group.stdout }}"
      }
    dest: /etc/docker/daemon.json
  become: yes

- name: Restart and enable docker
  service:
    name: docker
    state: reloaded
    enabled: yes
  become: yes

- name: Create redeploying script
  copy:
    content: |
      #!/bin/bash
      docker-compose -f {{ docker_compose_file }} pull
      docker-compose -f {{ docker_compose_file }} up
    dest: '{{ redeploy_script }}'
    mode: a+x

- name: Create mount point for docker volume
  file:
    state: directory
    path: '{{ mount_point }}'

- name: Download docker-hook
  get_url:
    url: '{{ docker_hook_url }}'
    dest: '{{ docker_hook }}'
    mode: a+x

- name: Clone sova repo
  git:
    repo: '{{ git_repo }}'
    dest: '{{ git_repo_path }}'

- name: Check if token exists on local machine
  stat:
    path: '{{ token_path }}'
  register: token_stat
  failed_when: not token_stat.stat.exists
  delegate_to: localhost

- name: Get auth token
  no_log: true
  set_fact:
    auth_token: "{{ lookup('pipe', 'cat {{ token_path }}') }}"

- name: Check if SSH private key for Gerrit exists on local machine
  stat:
    path: '{{ gerrit_ssh_key }}'
  register: ssh_stat
  failed_when: not ssh_stat.stat.exists
  delegate_to: localhost

- name: Get Gerrit SSH private key
  copy:
    src: '{{ gerrit_ssh_key }}'
    dest: '{{ mount_point }}/robi_id_rsa'

- name: Create docker-hook service
  template:
    src: docker-hook.service.j2
    dest: /etc/systemd/system/docker-hook.service
  become: yes

- name: Start docker-hook service
  service:
    name: docker-hook.service
    state: started
    enabled: yes
  become: yes

- name: Create docker-compose from template
  template:
    src: docker-compose.yaml.j2
    dest: '{{ docker_compose_file }}'

- name: Run docker-compose from repo
  docker_service:
    project_src: '{{ work_dir }}'
    state: present
    pull: yes
